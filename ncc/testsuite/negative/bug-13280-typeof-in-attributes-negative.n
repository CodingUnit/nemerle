using System;
using System.Collections.Generic;

[Test(typeof(Dictionary[int, _]))] // E: to create open generic type, all arguments must be open `_'
class TypeOfHalfGenericClass { }

[Test(typeof(int*_))] // E: to create open generic type, all arguments must be open `_'
class TypeOfHalfGenericTuple { }

[Test(typeof(_ -> int))] // E: to create open generic type, all arguments must be open `_'
class TypeOfHalfGenericFunc { }

[Test(typeof(IDictionary[int, _]))] //E : to create open generic type, all arguments must be open `_'
class TypeOfHalfGenericIDictionary { }

[Test(typeof(List[Dictionary[int, _]]))] //E : to create open generic type, all arguments must be open `_'
class TypeOfHalfGenericDictionaryList { }

[Test(typeof(IList[Dictionary[_,_]]))] //E : tto create open generic type, all arguments must be open `_'
class TypeOfGenericDictionaryIList { }

[Record]
class TestAttribute : Attribute
{
  public Type : Type; 
}