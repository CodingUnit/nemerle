using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using Nemerle.Statechart;

  [statechart(<#

  flags testing auto_initial;
  //flags debug;
  
  name "join transition alternative";
  
  state A
  {
    a => B;
  }

  join j1 => A;
  
  region B
  {
    state C
    {
      a => E;
    }
    
    state E
    {
      a => j1;
    }
    
  } and
  {
    
    state D
    {
      a => j1;
    }
    
  }
  
  #>)]
  public class example
  {
  }

  module Test
  {
    Main() : void
    {
      def fsm = example();
      def tester = fsm.GetTester();
      tester.ConsoleTestInit();
      tester.Initiate("A", "EntryA");
      tester.Test("a", "CD", ["A"], ["B", "C", "D"]);
      tester.Test("a", "ED", ["C"], ["E"]);
      tester.Test("a", ["D", "E", "B"], ["A"]);
      fsm.Terminate();      
    }
  }
  
 /*
BEGIN-OUTPUT
EntryA
[A]
Ok
Processing a 'a' 
ExitA
EntryB
EntryC
EntryD
[CD]
Ok
Processing a 'a' 
ExitC
EntryE
[ED]
Ok
Processing a 'a' 
ExitD
ExitE
ExitB
EntryA
[A]
Ok
END-OUTPUT
*/
